# #------------------список----------------------#
# """ 
# дан список целых чисел, дана цель target  
# Показать номера индексов и сами элементы, 
# чтобы они складывались в цель

# гарантированно, что элементов не больше двух


# ПРимер
# nums = [2,3,4]
# target = 6
# ВЫВОД nums[0]->2 + nums[2]->4 = 6

# ПРимер
# nums = [2,3,4]
# target = 7
# ВЫВОД nums[1]->3 + nums[2]->4 = 7

# ПРимер
# nums = [2,1,4]
# target = 4
# ВЫВОД для данной цели нет пары сумм
# ПРимер
# nums = [2,2,4]
# target = 4
# ВЫВОД 2+2
# """
# nums = [2,3,4,1,0,6]
# """ 
# 2 + 3
# 2 + 4
# 2 + 1
# 2 + 0
# 3 + 4
# 3 + 1
# 3 + 0
# 4 + 1 ....
# """
# target = 7
# # перебор элементов начиная с индекса 1
# for fix_i in range(len(nums)-1):# зафиксированный элемент
    
#     # перебор элементов начиная с индекса 1
#     for el_i in range(fix_i+1,len(nums)):# List[start:end(не включетельно):step]
#         if nums[fix_i] + nums[el_i] == target:
#             print(nums[fix_i], nums[el_i], target)
#             #break






##---------------задание-------------------#
# """ 
# перебрать все пары элементов в списке
# """
# nums = [2,3,2,4,1,0]


# nums = [2,3,4,1,0]
# for fix_i in range(len(nums)-1):# фиксируем индекс
#     for el_i in range(fix_i+1,len(nums)) :
#         print(f'fix_i = {fix_i} |',nums[fix_i], f'el_i = {el_i} |', nums[el_i])
#         #----не самый хороший способ---#
#         # if fix_el != el:
#         #     print(fix_el, el)

##---------------задание-------------------#

""" 
используя вложенный цикл
*
**
***
****
*****
******
*****
****
***
**
*
"""

# num = 6
# for i in range(num + 1):
#   print('*' * i)
#   if i == num:
#      for j in range(num - 1, 0, -1):
#        print('*' * j)
  
# for j in range(0,6,1):
#        print('*' * j)
# for j in range(0,6,1):
#        print('*' * (num-j))# 6-0 -> 6-1 -> 6-2


#----------------------еще один вариант решения----------------------------------#
# num = 6
# end = 0
# step = 1

# for i in range(0, num+1, num):# 0, 6
#     start = num - i
#     end = end + i
#     step = -step
#     for j in range(start,end,step):
#         print('*' * (num-j))# 6-0 -> 6-1 -> 6-2
       

""" 

*********
*********
*********

*********
*       *
*********
"""

#help(reversed)
# x = [1, 2, 3, 4, 5]
# # x = list(reversed(x))
# x = x[::-1]
# print(x)




# #----------------------------Словари---------------------------------#
# #                      ассоциатинвый массив
# #                         хэш-таблицы
# # ключ(уникальный) -> значение
# # {'кот':'cat' } кот - ключ | cat - значение
# d={'кот':'cat' }
# # print(type(d))
# # #print(d[0])# keyError нет ключа 0
# # print(d['кот'])
# d[0] = 'zero' # создание еще одной пары  
# # print(d)
# # print(d[0])

# # for key in d:
# #     print(key,d[key])



#-------------------------- Функции ----------------------------------#
# сохраненный алгоритм , который выполняет поставленную задачу
# # 
# #def - define 
# def print_element_from_list(l):# (аргумент)
#     for el in l:
#         print(el)


# l1 = [3,5,8]
# l2 = [1,2,3]
# l3 = [1,2,3]
# l4 = [1,2,3]
# l5 = [1,2,3]

# # for el in l1:
# #     print(el)
# # for el in l2:
# #     print(el)

# for l in l1,l2,l3,l4,l5:
#     print(l)
#     print_element_from_list(l)

#-----------задание------------#
""" 
написать функцию, которая по выбору знака, вычисляет результат выражения
num1 = 5
num2 = 4
sign = '+'
Вывод 5+4 = 9

"""
num1 = 5
num2 = 4
sign = '+'

def func(num1,num2,sign):
    if sign == '+':
        res = num1 + num2
    elif sign == '-':
        res = num1 - num2
    print(res)


func(num1,num2,sign)