# # словарь
# d = {'растение 1': 4,'растение 2':5}
# for key in d:
#     print(key, d[key], end='|')

#--------------------------методы отладки-----------------------------------#
# ожидаемый результат не совпадает с фактическим - признак логической ошибки
# отладочная печать ->  цель найти логическую ошибку
# c помощью debuger - программа  ->  цель найти логическую ошибку
# # модульные(юнит) тесты (unit-tests) - пишите код, который тестирует функции или модули
# def f1():
#     pass
# def f2():
#     pass

# #ОСНОВНОЙ КОД
# def main():
#     f1()
#     f2()


#---------------------------------отладочная печать-------------------------------------------#
# ЗАДАНИЕ 1
# Дан текстовый файл. Каждая строка содержит последовательность из произвольных символов произвольной длины. 
# Определите номер строки, в котором содержится наибольшее кол-во буквы ‘А’ в строке. 
# Если таких строк нет, программ должна вывести 0. 


# --------------------- тест-кейсы это все что ниже --------------------- #

# тривиальные случаи -  файл пустой, файл не содержит букв А -> ожидаемый результат 0
# все остальные тесты, которые рассмотрят задачу с разных сторон




#--------------------------------------тривиальный тест-кейсы----------------------------------------------#
# --------------------- 1 тест-кейс--------------------- #
# тривиальный случай -  файл пустой
# передан пустой файл или строка
# ожидаемый результат 0

# --------------------- 2 тест-кейс--------------------- #
# тривиальный случай -   файл не содержит букв А -> ожидаемый результат 0
# RRR
# RR!
# EEE2
# ожидаемый результат 0

# --------------------- 3 тест-кейс--------------------- #
# тривиальный случай, так нет описания для него (все строки содержат одинаковое кол-во букв А)
# 3ААА3
# ААА
# А111А3А
# 1111ААА
# ожидаемый результат ? (предположительно фактический результат будет 1)





# ---------------------тест-кейсы -- разное кол-во букв А ------------------#

# --------------------- 4 тест-кейс--------------------- #
# максимальное кол-во находится в последней строке
# CAAA BB 1BCCC
# C BB BCCC
# CAAAAA1BBBCCC
# ожидаемый результат 3

# --------------------- 5 тест-кейс--------------------- #
# разное кол-во букв А 
# максимальное кол-во находится в первой строке
# CAAAAА BB 1BCCC
# C BB BCCC
# CAA1BBBCCC
# ожидаемый результат  1


# --------------------- 6 тест-кейс--------------------- #
# разное кол-во букв А
# максимальное кол-во находится в где-то ни в первой и ни в последней строке
# CAA BB 1BCCC
# C BААААB BCCC
# CAA1BBBCCC
# ожидаемый результат  2



#-------------проблема----------------#
# С данной задачей возникли проблеммы, я так и не смог разобраться как мне определить
# в какой строке находится самое большее количество необходимого символа

# изначальный план  
# for i in s: # i - это строка
#     if i.find('A')!=-1: # True это  -1  и любой другое число
#         print('отладочная печать', count)
#         count += 1
# print(count) 
# # прошел 1 тест, но остальные показали , что код работает неверно






# #------------- Дальнейшая разработка была проведена с новым алгоритмом----------------#

# --------------------- 4 тест-кейс -УСПЕШНЫЙ-  --------------------- #
# максимальное кол-во находится в последней строке
# CAAA BB 1BCCC
# C BB BCCC
# CAAAAA1BBBCCC
# ожидаемый результат 3


# ---------------------Код для 4 тест-кейс--------------------- #

# count = 0 # максимальное кол-во буквы

# s = ['CAAA BB 1BCCC',
# 'C BB BCCC',
# 'CAAAAA1BBBCCC']     

# # посчитать и запомнить кол-во буквы
# count_nad_row = {} # ключ - номер строки : значение - кол-во букв

# for row, string in enumerate(s):
#     countA = string.count('A')
#     count_nad_row[row] = countA # добавляем или обновляем значение в словаре
# print(count_nad_row)
# print(max(count_nad_row)+1)# фактический результат 3

#-------------конец----------------#





# --------------------- 5 тест-кейс--------------------- #
# разное кол-во букв А 
# максимальное кол-во находится в первой строке
# CAAAAА BB 1BCCC
# C BB BCCC
# CAA1BBBCCC
# ожидаемый результат  1

#-------------код для 5 тест-кейса ----------------#
# # --------------неправльный код -НЕЭФФЕКТИВНАЯ ВЕРСИЯ ------------------#
# count = 0 # максимальное кол-во буквы
# # with open('дз.txt', 'r', -1, 'utf-8') as f:
# s = ['CAAAAA BB 1BCCC',
# 'C BB BCCC',
# 'CAA1BBBCCC']     #f.readlines()

# # посчитать и запомнить кол-во буквы
# count_nad_row = {} # ключ - номер строки : значение - кол-во букв

# for row, string in enumerate(s):
#     countA = string.count('A')
#     count_nad_row[row] = countA # добавляем или обновляем значение в словаре
# print(count_nad_row)
# print(max(count_nad_row)+1)#  ищет максимальный ключ 

# # фактический результат  3


# # # --------------правльный код -переделайный с учетом данного теста- -------------------#

# count = 0 # максимальное кол-во буквы
# # with open('дз.txt', 'r', -1, 'utf-8') as f:
# s = ['CAAAAA BB 1BCCC',
# 'C BB BCCC',
# 'CAA1BBBCCC']     #f.readlines()

# # посчитать и запомнить кол-во буквы
# count_nad_row = {} # ключ - номер строки : значение - кол-во букв

# for row, string in enumerate(s):
#     countA = string.count('A')
#     count_nad_row[row] = countA # добавляем или обновляем значение в словаре
# print(count_nad_row)

# maxCount = 0
# row = 0
# for key in count_nad_row:
#     if count_nad_row[key] > maxCount:
#         maxCount = count_nad_row[key]
#         row = key
# print(row+1)
# # фактический результат  1
#-------------конец----------------#










# --------------------- 6 тест-кейс--------------------- #
# разное кол-во букв А
# максимальное кол-во находится в где-то ни в первой и ни в последней строке
# CAA BB 1BCCC
# C BААААB BCCC
# CAA1BBBCCC
# ожидаемый результат  2



# --------------------- код для 6 тест-кейс--------------------- #

count = 0 # максимальное кол-во буквы
# with open('дз.txt', 'r', -1, 'utf-8') as f:
s = ['CAA BB 1BCCC',
'C BAAAAAB BCCC',
'CAA1BBBCCC']     


#---------------------- 1 cпособ---------------------#
# посчитать и запомнить кол-во буквы
# count_nad_row = {} # ключ - номер строки : значение - кол-во букв

# for row, string in enumerate(s):
#     countA = string.count('A')
#     count_nad_row[row] = countA # добавляем или обновляем значение в словаре
# print(count_nad_row)

# maxCount = 0
# row = 0
# for key in count_nad_row:
#     if count_nad_row[key] > maxCount:
#         maxCount = count_nad_row[key]
#         row = key
# print(row+1)
#---------------------- 1 cпособ---------------------#


#---------------------- 2 cпособ---------------------#

maxCount = 0
m_row = 0
# 2 cпособ
for row, string in enumerate(s):
    if string.count('A') > maxCount:
        maxCount = string.count('A')
        m_row = row

print(m_row+1)

#---------------------- 2 cпособ---------------------#





#----------------------------------------------------------------------------#