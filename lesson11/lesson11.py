# # ---------- filter()------------ #
# """ 
# filter - фильтрует по определенному критерию 
# создать новый список четных чисел из исходного списка

# """
# l = [2,5,34,78889,9,44]
# new_l = list(filter(lambda n: n%2==0, [2,5,34,78889,9,44]))

# print(new_l)

# # ---------- map()------------ #
# """ 
# map - формирует новый *список* по определенному критерию 
# """

# l = [2,5,34,78889,9,44]
# newl = list(map(lambda x: x*2, l))

# print(newl)


# ----------задание------------ #
""" 
дан список чисел, необходимо создать новый список из строковых чисел

пример
[2,5,34,78889,9,44]
вывод
['2','5'...]

"""
# l = [2,5,34,78889,9,44]
# newl = list(map(lambda el: str(el),l))
# # #-------------тоже самое что и выше на одну строку-----------------------#
# # new_l = []
# # for el  in l:
# #     new_l.append(str(el))
# # #--------------------------------------------------------------------#
# print(newl)









# ----------задание------------ #
""" 
дан список чисел
неоходимо сформировать новый список с простыми числами
* совет функцию 
"""

#lambda x: действие при true if услове else действие при false
# def f(x):
#     if x<2:
#         return False
#     for i in range(2, int(x**0.5)+1):
#         if x % i == 0:
#             return False
#     return True

# l = [2,5,34,78889,9,44]
# new_l = list(filter(lambda el: f(el), l))
# # # # #-------------тоже самое что и выше на одну строку-----------------------#

# # new_list = []
# # for el in l:
# #     if f(el):
# #         new_list.append(el)
# # # # #--------------------------------------------------------------------#

# print(new_l)


# # ----------задание------------ #
# """ 
# дан список чисел
# посчитать сумму четных цифр
# * совет создать новый список

# """

# l = list(range(1, 25)) # [1,2,3...23,24]
# b = 0
# new_l = list(filter(lambda x: x % 2 == 0, l)) # сформируетсясписок четных чисел

# print(new_l)
# #----------1 способ подсчета суммы-------------#
# for i in new_l:
#     b = b + i
# #-----------------------#\
    
# #----------2 способ подсчета суммы-------------#
# b = sum(new_l)
# #-----------------------#\
    
#-------------------reduce()------------------------#
# #----------3 способ подсчета суммы-------------#
# from functools import reduce 
# b = reduce(lambda x, x1: x+x1, new_l)

# print(b)

# # ----------задание------------ #
# """ 
# дан список чисел
# посчитать произведение двузначных чисел # 10 45 87
# * совет создать новый список

# """
# #------мини-задание-------#
# """ 
# написать лямбда функцию для формирования случайных чисел в списке
# """
# import random as r
# l = []
# func = lambda x: [r.randint(1, 100) for el in range(r.randint(1, 10))]
# l = func(l)

# b = 1
# new_l = list(filter(lambda x: 10 <= x <= 100, l))
# # new_l = list(filter(lambda x: len(str(x))==2, l)) # 2 способ

# print(new_l)
# # # #----------1 способ подсчета произведения-------------#
# # for i in new_l:
# #     b = b * i
# # #--------------------------------------------------------#
# from functools import reduce
# b = reduce(lambda x,x1: x*x1, new_l)

# print(b)



#------------------------------строки-----------------------------------#

""" 
"строка" - ['c','т'...'a']
'строка'
''' строка''' сюда же   """ """
"""
# s = "это строка" 
# print(s[2])
# for symbol in s:
#     print(symbol)

# s = 'string'
# print(s.find('s',1,3)) # -1 -не нашел такой элемент


# #------------------задание-----------------
# """ 
# Даны строка и слово для поиска. Посчитайте сколько раз в строке встречается
# искомое слово. Полученное число выведите на экран
# 1. найти слово в строке
# 2. посчитать кол-во повторений
# """
# s = 'cat is not a dog. cat is beautiful'
# word = 'cat'
# print(s.count(word))

# #------------------задание-----------------
# """ 
# Даны строка и символ для поиска. Посчитайте сколько раз в строке встречается
# искомое символ без учета регистра(может любым). Полученное число выведите на экран
# 1. найти слово в строке
# 2. посчитать кол-во повторений
# """
# s = 'cat is not a dog. cat is beautiful'
# word = 'c' 
# #считаем как дано
# print(s.count(word))
# # выполнить проверку на регистр
# if word.isupper():
#     print(s.count(word.lower()), word.lower(), word)
# else:
#     print(s.count(word.upper()), word.upper(), word)


#--------------------------------задание-----------------#
""" 
Строка состоит из символов X, Y и Z. 
Определите длину самой длинной последовательности, состоящей из символов X. Хотя бы один символ X 
находится в последовательности.

XYXXXXYZXXYZ
X - ПОДХОДИТ 1
XXXX - 4
XX - 2
НАИБОЛЬШАЯ 4
"""
# s = "XYXXXXYZXXYZXXXXXX"
# counter = 0
# max_count = 0
# for e in s:
#     if e == 'X':
#         counter += 1
#     else:
#         if counter > max_count:
#             max_count = counter
#         counter = 0
# if counter > max_count:
#     max_count = counter
# print(max_count)

# #------2 способ------#
# list_ = []
# count_list = []
# for i in 'XYXXXXYZXXYZ':
#     if i == 'X':
#         list_.append(i)
#     else:
#         print(list_)
#         count_list.append(len(list_))
#         list_.clear()

# print(max(count_list))

#



 
# #--------------------------------задание--------------------------------------#
""" 
Строка состоит из символов X, Y и Z. 
Определите длину самой длинной последовательности, состоящей из символов XYZ. Хотя бы одна XYZ 
находится в последовательности.

XYXYZXXYZXYZXYZ
XYZ - ПОДХОДИТ 1
XYZXYZXYZ - 3

НАИБОЛЬШАЯ 3
*совет используйте метод replace
"""
string = 'XYXYZXXYZXYZXYZ'
new_str = string.replace('XYZ', '1')
print(new_str)
counter = 0
max_count = 0
for i in new_str:
    if i == '1':
        counter += 1
    else:
        if counter > max_count:
            max_count = counter
        counter = 0

if counter > max_count:
    max_count = counter
print(max_count)





